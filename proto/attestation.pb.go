// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: proto/attestation.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// AttestationRequest specifies parameters for generating an attestation
type AttestationRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	InputHash      []byte                 `protobuf:"bytes,1,opt,name=input_hash,json=inputHash,proto3" json:"input_hash,omitempty"`                // SHA-256 hash of the input payload
	OutputHash     []byte                 `protobuf:"bytes,2,opt,name=output_hash,json=outputHash,proto3" json:"output_hash,omitempty"`             // SHA-256 hash of the output payload
	OperatorPubkey []byte                 `protobuf:"bytes,3,opt,name=operator_pubkey,json=operatorPubkey,proto3" json:"operator_pubkey,omitempty"` // Operator's ECDSA public key (X.509 DER encoded)
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *AttestationRequest) Reset() {
	*x = AttestationRequest{}
	mi := &file_proto_attestation_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AttestationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttestationRequest) ProtoMessage() {}

func (x *AttestationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_attestation_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttestationRequest.ProtoReflect.Descriptor instead.
func (*AttestationRequest) Descriptor() ([]byte, []int) {
	return file_proto_attestation_proto_rawDescGZIP(), []int{0}
}

func (x *AttestationRequest) GetInputHash() []byte {
	if x != nil {
		return x.InputHash
	}
	return nil
}

func (x *AttestationRequest) GetOutputHash() []byte {
	if x != nil {
		return x.OutputHash
	}
	return nil
}

func (x *AttestationRequest) GetOperatorPubkey() []byte {
	if x != nil {
		return x.OperatorPubkey
	}
	return nil
}

// AttestationResponse contains the attestation report and related data
type AttestationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Report        []byte                 `protobuf:"bytes,1,opt,name=report,proto3" json:"report,omitempty"`                                 // Raw attestation report
	Signature     []byte                 `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`                           // Report signature
	Certificate   []byte                 `protobuf:"bytes,3,opt,name=certificate,proto3" json:"certificate,omitempty"`                       // AMD signing certificate
	PlatformInfo  string                 `protobuf:"bytes,4,opt,name=platform_info,json=platformInfo,proto3" json:"platform_info,omitempty"` // Additional platform information
	IsSecure      bool                   `protobuf:"varint,5,opt,name=is_secure,json=isSecure,proto3" json:"is_secure,omitempty"`            // Indicates if running in a secure environment
	ReportData    []byte                 `protobuf:"bytes,6,opt,name=report_data,json=reportData,proto3" json:"report_data,omitempty"`       // The 64-byte report data that was signed (for verification)
	OperatorSig   []byte                 `protobuf:"bytes,7,opt,name=operator_sig,json=operatorSig,proto3" json:"operator_sig,omitempty"`    // The operator's signature over (input_hash || output_hash)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AttestationResponse) Reset() {
	*x = AttestationResponse{}
	mi := &file_proto_attestation_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AttestationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttestationResponse) ProtoMessage() {}

func (x *AttestationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_attestation_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttestationResponse.ProtoReflect.Descriptor instead.
func (*AttestationResponse) Descriptor() ([]byte, []int) {
	return file_proto_attestation_proto_rawDescGZIP(), []int{1}
}

func (x *AttestationResponse) GetReport() []byte {
	if x != nil {
		return x.Report
	}
	return nil
}

func (x *AttestationResponse) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *AttestationResponse) GetCertificate() []byte {
	if x != nil {
		return x.Certificate
	}
	return nil
}

func (x *AttestationResponse) GetPlatformInfo() string {
	if x != nil {
		return x.PlatformInfo
	}
	return ""
}

func (x *AttestationResponse) GetIsSecure() bool {
	if x != nil {
		return x.IsSecure
	}
	return false
}

func (x *AttestationResponse) GetReportData() []byte {
	if x != nil {
		return x.ReportData
	}
	return nil
}

func (x *AttestationResponse) GetOperatorSig() []byte {
	if x != nil {
		return x.OperatorSig
	}
	return nil
}

var File_proto_attestation_proto protoreflect.FileDescriptor

const file_proto_attestation_proto_rawDesc = "" +
	"\n" +
	"\x17proto/attestation.proto\x12\vattestation\"}\n" +
	"\x12AttestationRequest\x12\x1d\n" +
	"\n" +
	"input_hash\x18\x01 \x01(\fR\tinputHash\x12\x1f\n" +
	"\voutput_hash\x18\x02 \x01(\fR\n" +
	"outputHash\x12'\n" +
	"\x0foperator_pubkey\x18\x03 \x01(\fR\x0eoperatorPubkey\"\xf3\x01\n" +
	"\x13AttestationResponse\x12\x16\n" +
	"\x06report\x18\x01 \x01(\fR\x06report\x12\x1c\n" +
	"\tsignature\x18\x02 \x01(\fR\tsignature\x12 \n" +
	"\vcertificate\x18\x03 \x01(\fR\vcertificate\x12#\n" +
	"\rplatform_info\x18\x04 \x01(\tR\fplatformInfo\x12\x1b\n" +
	"\tis_secure\x18\x05 \x01(\bR\bisSecure\x12\x1f\n" +
	"\vreport_data\x18\x06 \x01(\fR\n" +
	"reportData\x12!\n" +
	"\foperator_sig\x18\a \x01(\fR\voperatorSig2k\n" +
	"\x12AttestationService\x12U\n" +
	"\x0eGetAttestation\x12\x1f.attestation.AttestationRequest\x1a .attestation.AttestationResponse\"\x00B9Z7github.com/bdchatham/obsidian-attestation-manager/protob\x06proto3"

var (
	file_proto_attestation_proto_rawDescOnce sync.Once
	file_proto_attestation_proto_rawDescData []byte
)

func file_proto_attestation_proto_rawDescGZIP() []byte {
	file_proto_attestation_proto_rawDescOnce.Do(func() {
		file_proto_attestation_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_attestation_proto_rawDesc), len(file_proto_attestation_proto_rawDesc)))
	})
	return file_proto_attestation_proto_rawDescData
}

var file_proto_attestation_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_proto_attestation_proto_goTypes = []any{
	(*AttestationRequest)(nil),  // 0: attestation.AttestationRequest
	(*AttestationResponse)(nil), // 1: attestation.AttestationResponse
}
var file_proto_attestation_proto_depIdxs = []int32{
	0, // 0: attestation.AttestationService.GetAttestation:input_type -> attestation.AttestationRequest
	1, // 1: attestation.AttestationService.GetAttestation:output_type -> attestation.AttestationResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_attestation_proto_init() }
func file_proto_attestation_proto_init() {
	if File_proto_attestation_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_attestation_proto_rawDesc), len(file_proto_attestation_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_attestation_proto_goTypes,
		DependencyIndexes: file_proto_attestation_proto_depIdxs,
		MessageInfos:      file_proto_attestation_proto_msgTypes,
	}.Build()
	File_proto_attestation_proto = out.File
	file_proto_attestation_proto_goTypes = nil
	file_proto_attestation_proto_depIdxs = nil
}
